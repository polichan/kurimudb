import{o as n,c as s,a}from"./app.1f1a6988.js";const p='{"title":"入门","description":"","frontmatter":{},"headers":[{"level":2,"title":"Kurimudb 是什么","slug":"kurimudb-是什么"},{"level":2,"title":"体验","slug":"体验"},{"level":3,"title":"Local","slug":"local"},{"level":3,"title":"Cookie","slug":"cookie"},{"level":3,"title":"Memory","slug":"memory"},{"level":3,"title":"Db","slug":"db"},{"level":3,"title":"订阅变更","slug":"订阅变更"},{"level":2,"title":"准备好了吗？","slug":"准备好了吗？"}],"relativePath":"intro.md","lastUpdated":1620269515948}',e={},o=a('<h1 id="入门"><a class="header-anchor" href="#入门" aria-hidden="true">#</a> 入门</h1><h2 id="kurimudb-是什么"><a class="header-anchor" href="#kurimudb-是什么" aria-hidden="true">#</a> Kurimudb 是什么</h2><p>Kurimudb 是一款渐进式的 <strong>Web 端本地存储库</strong>，可将数据保存到 LocalStorage、IndexedDB、Cookie 等地方，和订阅值的变更。</p><p>除了持久化数据之外，若你愿意，Kurimudb 还能成为你应用的 <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel#Components_of_MVVM_pattern" target="_blank" rel="noopener noreferrer">Model 层</a> 抽象，接任你应用中状态管理库的职责 (如 Vuex、Redux、Mobx)，使你应用真正拥有单一数据来源。</p><p>Kurimudb 的数据存储功能是驱动化的，这意味着你可以在不更改代码的情况下更换具体实现，我们制作了几个常用的驱动，如果不满足需求的话，你也可以编写属于自己的驱动。</p><h2 id="体验"><a class="header-anchor" href="#体验" aria-hidden="true">#</a> 体验</h2><p><code>kurimudb-zero-config</code> 是 Kurimudb 的零配置包，执行下面命令来安装它：</p><div class="language-bash line-numbers-mode"><pre><code><span class="token function">npm</span> i kurimudb-zero-config@3\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="local"><a class="header-anchor" href="#local" aria-hidden="true">#</a> Local</h3><p>操作 <code>local</code> 对象，可以把数据存储在 LocalStorage 中，即使页面刷新，数据还会在哒！可以存储约 5M 数据。</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> local <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb-zero-config&quot;</span><span class="token punctuation">;</span>\n\nlocal<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 写入..</span>\n<span class="token keyword">let</span> say <span class="token operator">=</span> local<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// 读取..</span>\n<span class="token keyword">delete</span> local<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// 删除..</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;say&quot;</span> <span class="token keyword">in</span> local<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// 判断是否存在..</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="cookie"><a class="header-anchor" href="#cookie" aria-hidden="true">#</a> Cookie</h3><p>操作 <code>cookie</code> 对象，可以把数据存储在 Cookie 中，其中存储的数据应当尽量的少，因为浏览器一般会在每次请求时，将你的 Cookie 都发送给服务端。</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> cookie <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb-zero-config&quot;</span><span class="token punctuation">;</span>\n\ncookie<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 写入..</span>\n<span class="token keyword">let</span> say <span class="token operator">=</span> cookie<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// 读取..</span>\n<span class="token keyword">delete</span> cookie<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// 删除..</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;say&quot;</span> <span class="token keyword">in</span> cookie<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// 判断是否存在..</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="memory"><a class="header-anchor" href="#memory" aria-hidden="true">#</a> Memory</h3><p>操作 <code>memory</code> 对象，可以把数据存储在 Memory 中，当页面刷新时，数据就被清空啦。</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> memory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb-zero-config&quot;</span><span class="token punctuation">;</span>\n\nmemory<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 写入..</span>\n<span class="token keyword">let</span> say <span class="token operator">=</span> memory<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// 读取..</span>\n<span class="token keyword">delete</span> memory<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// 删除..</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token string">&quot;say&quot;</span> <span class="token keyword">in</span> memory<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// 判断是否存在..</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="db"><a class="header-anchor" href="#db" aria-hidden="true">#</a> Db</h3><p>操作 <code>db</code> 对象，可以把数据存储在 IndexedDB 中，IndexedDB 可以保存诸如 File、Blob 等 JavaScript 对象，其最大数据容量，基于用户设备的可用硬盘大小。</p><p>注意，由于 IndexedDB 的 Api 是异步的，因此 <code>db</code> 和读有关的 Api 返回值都是 <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noopener noreferrer">Promise 对象</a>。</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> db <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb-zero-config&quot;</span><span class="token punctuation">;</span>\n\ndb<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span> <span class="token comment">// 写入..</span>\n<span class="token keyword">let</span> say <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// 读取，返回值将是 Promise..</span>\n<span class="token keyword">delete</span> db<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// 删除..</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">await</span> db<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span> <span class="token comment">// 判断是否存在..</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="订阅变更"><a class="header-anchor" href="#订阅变更" aria-hidden="true">#</a> 订阅变更</h3><p>Kurimudb 还提供了订阅值变化的功能，只需在值后加上 <code>$</code> 符号，就能在它被改变时做点什么：</p><div class="language-js line-numbers-mode"><pre><code>local<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">say$</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;what you want to say: &quot;</span> <span class="token operator">+</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>或者使用<strong>自动订阅功能</strong>，当闭包中用到的值，有任一被更改时，都会触发订阅，重新执行此闭包：</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> auto$ <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb-zero-config&quot;</span><span class="token punctuation">;</span>\n\n<span class="token function">auto$</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>configState<span class="token punctuation">.</span>data<span class="token punctuation">.</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>configState<span class="token punctuation">.</span>data<span class="token punctuation">.</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>关于订阅，还有更多的高级用法噢！请阅读<a href="/subscribe.html">订阅变更</a>章节。</p><h2 id="准备好了吗？"><a class="header-anchor" href="#准备好了吗？" aria-hidden="true">#</a> 准备好了吗？</h2><p>我们刚刚介绍了 Kurimudb 的核心用法——但这只是 Kurimudb 功能的很小一部分，所以，请务必读完整个教程！</p>',29);e.render=function(a,p,e,t,c,l){return n(),s("div",null,[o])};export default e;export{p as __pageData};
